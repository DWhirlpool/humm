{
  "version": 3,
  "sources": ["../proxy-compare/src/index.ts", "../valtio/esm/vanilla.js"],
  "sourcesContent": ["// symbols\nconst OWN_KEYS_SYMBOL = Symbol();\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst FROZEN_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// check if frozen\nconst isFrozen = (obj: object) => (\n  Object.isFrozen(obj) || (\n    // Object.isFrozen() doesn't detect non-writable properties\n    // See: https://github.com/dai-shi/proxy-compare/pull/8\n    Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n      (descriptor) => !descriptor.writable,\n    )\n  )\n);\n\n// copy frozen object\nconst unfreeze = (obj: object) => {\n  if (Array.isArray(obj)) {\n    // Arrays need a special way to copy\n    return Array.from(obj);\n  }\n  // For non-array objects, we create a new object keeping the prototype\n  // with changing all configurable options (otherwise, proxies will complain)\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n  return Object.create(getProto(obj), descriptors);\n};\n\ntype Affected = WeakMap<object, Set<string | number | symbol>>;\ntype ProxyCache<T extends object> = WeakMap<object, ProxyHandler<T>>;\ntype ProxyHandler<T extends object> = {\n  [FROZEN_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object>;\n  [AFFECTED_PROPERTY]?: Affected;\n  get(target: T, key: string | number | symbol): unknown;\n  has(target: T, key: string | number | symbol): boolean;\n  ownKeys(target: T): (string | number | symbol)[];\n  set?(target: T, key: string | number | symbol, value: unknown): boolean;\n  deleteProperty?(target: T, key: string | number | symbol): boolean;\n};\n\nconst createProxyHandler = <T extends object>(origObj: T, frozen: boolean) => {\n  let trackObject = false; // for trackMemo\n  const recordUsage = (h: ProxyHandler<T>, key: string | number | symbol) => {\n    if (!trackObject) {\n      let used = (h[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = new Set();\n        (h[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      used.add(key);\n    }\n  };\n  const recordObjectAsUsed = (h: ProxyHandler<T>) => {\n    trackObject = true;\n    (h[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    [FROZEN_PROPERTY]: frozen,\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(this, key);\n      return createDeepProxy(\n        (target as any)[key],\n        (this[AFFECTED_PROPERTY] as Affected),\n        this[PROXY_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed(this);\n        return true;\n      }\n      // LIMITATION:\n      // We simply record the same as get.\n      // This means { a: {} } and { a: {} } is detected as changed,\n      // if 'a' in obj is handled.\n      recordUsage(this, key);\n      return key in target;\n    },\n    ownKeys(target) {\n      recordUsage(this, OWN_KEYS_SYMBOL);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (frozen) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return handler;\n};\n\n/**\n * create a proxy\n *\n * It will recursively create a proxy upon access.\n *\n * @example\n * import { createDeepProxy } from 'proxy-compare';\n *\n * const obj = ...;\n * const affected = new WeakMap();\n * const proxy = createDeepProxy(obj, affected);\n */\nexport const createDeepProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  const origObj = (\n    obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj }\n  )[GET_ORIGINAL_SYMBOL]; // unwrap proxy\n  const target = origObj || obj;\n  const frozen = isFrozen(target);\n  let proxyHandler: ProxyHandler<typeof target> | undefined = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (!proxyHandler || proxyHandler[FROZEN_PROPERTY] !== frozen) {\n    proxyHandler = createProxyHandler<T extends object ? T : never>(target, frozen);\n    proxyHandler[PROXY_PROPERTY] = new Proxy(\n      frozen ? unfreeze(target) : target,\n      proxyHandler,\n    ) as typeof target;\n    if (proxyCache) {\n      proxyCache.set(target, proxyHandler);\n    }\n  }\n  proxyHandler[AFFECTED_PROPERTY] = affected as Affected;\n  proxyHandler[PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  return proxyHandler[PROXY_PROPERTY] as typeof target;\n};\n\nconst isOwnKeysChanged = (origObj: object, nextObj: object) => {\n  const origKeys = Reflect.ownKeys(origObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return origKeys.length !== nextKeys.length\n    || origKeys.some((k, i) => k !== nextKeys[i]);\n};\n\nexport const MODE_ASSUME_UNCHANGED_IF_UNAFFECTED = /*   */ 0b00001;\nexport const MODE_IGNORE_REF_EQUALITY = /*              */ 0b00010;\n\nconst IN_DEEP_SHIFT = 2;\nexport const MODE_ASSUME_UNCHANGED_IF_UNAFFECTED_IN_DEEP = (\n  MODE_ASSUME_UNCHANGED_IF_UNAFFECTED << IN_DEEP_SHIFT\n);\nexport const MODE_IGNORE_REF_EQUALITY_IN_DEEP = (\n  MODE_IGNORE_REF_EQUALITY << IN_DEEP_SHIFT\n);\n\ntype DeepChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * compare two object\n *\n * It will compare only with affected object properties\n *\n * @example\n * import { isDeepChanged } from 'proxy-compare';\n *\n * const objToCompare = ...;\n * const changed = isDeepChanged(obj, objToCompare, affected);\n */\nexport const isDeepChanged = (\n  origObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n  mode = 0,\n): boolean => {\n  if (Object.is(origObj, nextObj) && (\n    !isObject(origObj) || (mode & MODE_IGNORE_REF_EQUALITY) === 0)\n  ) {\n    return false;\n  }\n  if (!isObject(origObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(origObj);\n  if (!used) return (mode & MODE_ASSUME_UNCHANGED_IF_UNAFFECTED) === 0;\n  if (cache && (mode & MODE_IGNORE_REF_EQUALITY) === 0) {\n    const hit = (cache as DeepChangedCache).get(origObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as DeepChangedCache).set(origObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  // eslint-disable-next-line no-restricted-syntax\n  for (const key of used) {\n    const c = key === OWN_KEYS_SYMBOL ? isOwnKeysChanged(origObj, nextObj)\n      : isDeepChanged(\n        (origObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n        ((mode >>> IN_DEEP_SHIFT) << IN_DEEP_SHIFT) | (mode >>> IN_DEEP_SHIFT),\n      );\n    if (c === true || c === false) changed = c;\n    if (changed) break;\n  }\n  if (changed === null) changed = (mode & MODE_ASSUME_UNCHANGED_IF_UNAFFECTED) === 0;\n  if (cache && (mode & MODE_IGNORE_REF_EQUALITY) === 0) {\n    cache.set(origObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: changed,\n    });\n  }\n  return changed;\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n// get original object from proxy\nexport const getUntrackedObject = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n// mark object to track or not (even if it is not plain)\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n// convert affected to path list\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n) => {\n  const list: (string | number | symbol)[][] = [];\n  const walk = (x: unknown, path?: (string | number | symbol)[]) => {\n    const used = (affected as Affected).get(x as object);\n    if (used) {\n      used.forEach((key) => {\n        walk((x as any)[key], path ? [...path, key] : [key]);\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n", "import { getUntrackedObject, markToTrack } from 'proxy-compare';\n\nconst VERSION = Symbol();\nconst LISTENERS = Symbol();\nconst SNAPSHOT = Symbol();\nconst PROMISE_RESULT = Symbol();\nconst PROMISE_ERROR = Symbol();\nconst refSet = new WeakSet();\nconst ref = (o) => {\n  refSet.add(o);\n  return o;\n};\nconst isSupportedObject = (x) => typeof x === \"object\" && x !== null && (Array.isArray(x) || !x[Symbol.iterator]) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer);\nconst proxyCache = new WeakMap();\nlet globalVersion = 1;\nconst snapshotCache = new WeakMap();\nconst proxy = (initialObject = {}) => {\n  if (!isSupportedObject(initialObject)) {\n    throw new Error(\"unsupported object type\");\n  }\n  if (proxyCache.has(initialObject)) {\n    return proxyCache.get(initialObject);\n  }\n  let version = globalVersion;\n  const listeners = new Set();\n  const notifyUpdate = (nextVersion) => {\n    if (!nextVersion) {\n      nextVersion = ++globalVersion;\n    }\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(nextVersion));\n    }\n  };\n  const createSnapshot = (target, receiver) => {\n    const cache = snapshotCache.get(receiver);\n    if (cache && cache.version === version) {\n      return cache.snapshot;\n    }\n    const snapshot2 = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n    markToTrack(snapshot2, true);\n    snapshotCache.set(receiver, {version, snapshot: snapshot2});\n    Reflect.ownKeys(target).forEach((key) => {\n      const value = target[key];\n      if (refSet.has(value)) {\n        markToTrack(value, false);\n        snapshot2[key] = value;\n      } else if (!isSupportedObject(value)) {\n        snapshot2[key] = value;\n      } else if (value instanceof Promise) {\n        if (PROMISE_RESULT in value) {\n          snapshot2[key] = value[PROMISE_RESULT];\n        } else {\n          const errorOrPromise = value[PROMISE_ERROR] || value;\n          Object.defineProperty(snapshot2, key, {\n            get() {\n              throw errorOrPromise;\n            }\n          });\n        }\n      } else if (value[VERSION]) {\n        snapshot2[key] = value[SNAPSHOT];\n      } else {\n        snapshot2[key] = value;\n      }\n    });\n    Object.freeze(snapshot2);\n    return snapshot2;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const proxyObject = new Proxy(baseObject, {\n    get(target, prop, receiver) {\n      if (prop === VERSION) {\n        return version;\n      }\n      if (prop === LISTENERS) {\n        return listeners;\n      }\n      if (prop === SNAPSHOT) {\n        return createSnapshot(target, receiver);\n      }\n      return target[prop];\n    },\n    deleteProperty(target, prop) {\n      const prevValue = target[prop];\n      const childListeners = prevValue && prevValue[LISTENERS];\n      if (childListeners) {\n        childListeners.delete(notifyUpdate);\n      }\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate();\n      }\n      return deleted;\n    },\n    set(target, prop, value) {\n      var _a;\n      const prevValue = target[prop];\n      if (Object.is(prevValue, value)) {\n        return true;\n      }\n      const childListeners = prevValue && prevValue[LISTENERS];\n      if (childListeners) {\n        childListeners.delete(notifyUpdate);\n      }\n      if (refSet.has(value) || !isSupportedObject(value) || ((_a = Object.getOwnPropertyDescriptor(target, prop)) == null ? void 0 : _a.set)) {\n        target[prop] = value;\n      } else if (value instanceof Promise) {\n        target[prop] = value.then((v) => {\n          target[prop][PROMISE_RESULT] = v;\n          notifyUpdate();\n          return v;\n        }).catch((e) => {\n          target[prop][PROMISE_ERROR] = e;\n          notifyUpdate();\n        });\n      } else {\n        value = getUntrackedObject(value) || value;\n        if (value[LISTENERS]) {\n          target[prop] = value;\n        } else {\n          target[prop] = proxy(value);\n        }\n        target[prop][LISTENERS].add(notifyUpdate);\n      }\n      notifyUpdate();\n      return true;\n    }\n  });\n  proxyCache.set(initialObject, proxyObject);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(initialObject, key);\n    if (desc.get || desc.set) {\n      Object.defineProperty(baseObject, key, desc);\n    } else {\n      proxyObject[key] = initialObject[key];\n    }\n  });\n  return proxyObject;\n};\nconst getVersion = (proxyObject) => {\n  if (typeof process === \"object\" && process.env.NODE_ENV !== \"production\" && (!proxyObject || !proxyObject[VERSION])) {\n    throw new Error(\"Please use proxy object\");\n  }\n  return proxyObject[VERSION];\n};\nconst subscribe = (proxyObject, callback, notifyInSync) => {\n  if (typeof process === \"object\" && process.env.NODE_ENV !== \"production\" && (!proxyObject || !proxyObject[LISTENERS])) {\n    throw new Error(\"Please use proxy object\");\n  }\n  let pendingVersion = 0;\n  const listener = (nextVersion) => {\n    if (notifyInSync) {\n      callback();\n      return;\n    }\n    pendingVersion = nextVersion;\n    Promise.resolve().then(() => {\n      if (nextVersion === pendingVersion) {\n        callback();\n      }\n    });\n  };\n  proxyObject[LISTENERS].add(listener);\n  return () => {\n    proxyObject[LISTENERS].delete(listener);\n  };\n};\nconst snapshot = (proxyObject) => {\n  if (typeof process === \"object\" && process.env.NODE_ENV !== \"production\" && (!proxyObject || !proxyObject[SNAPSHOT])) {\n    throw new Error(\"Please use proxy object\");\n  }\n  return proxyObject[SNAPSHOT];\n};\n\nexport { getVersion, proxy, ref, snapshot, subscribe };\n"],
  "mappings": "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",
  "names": []
}
